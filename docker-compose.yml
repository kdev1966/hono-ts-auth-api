# encadriny/docker-compose.yml
services:
  api:
    build:
      context: ./backend
      target: production
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - internal-network
    environment:
      - PORT=3000
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - DATABASE_URL=postgresql://encadrin_api_usr:${API_DB_PASSWORD}@postgres:5432/encadrinyv01?schema=public

  postgres:
    image: postgres:15-alpine
    restart: always
    networks:
      - internal-network
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - API_DB_PASSWORD=${API_DB_PASSWORD}
    ports:
      - "127.0.0.1:5432:5432" # Bind to localhost for security
    volumes:
      - ./postgres/init:/docker-entrypoint-initdb.d
    healthcheck:
      test:
        - "CMD-SHELL"
        - "PGPASSWORD=${API_DB_PASSWORD} pg_isready -U encadrin_api_usr -d encadrinyv01"
      interval: 10s
      timeout: 5s
      retries: 10

volumes:
  pgdata:

networks:
  internal-network:
    driver: bridge
