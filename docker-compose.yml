# encadriny/docker-compose.yml
services:
  api:
    build: ./backend
    ports:
      - "3000:3000"
    depends_on:
      - postgres
    networks:
      - internal-network
    environment:
      - PORT=3000
      - DATABASE_URL=postgresql://encadrin_api_usr:T4m%248gLqXvR3%21pK9@postgres:5432/encadrinyv01?schema=public
      - JWT_SECRET=7kLp@3KqZ9!fVdRbX2^sT8mN*YhW4+PcBFjvQ!rH5@MzL9^BnS7!pKtG3$
  postgres:
    image: postgres:15-alpine
    restart: always
    networks:
      - internal-network
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=T4m$8gLq#vR3!pK9
      - POSTGRES_DB=encadrinyv01
    ports:
      - "127.0.0.1:5432:5432" # Bind to localhost for security
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./postgres/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d encadrinyv01"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  pgdata:

networks:
  internal-network:
    driver: bridge
