services:
  api:
    build:
      context: ./backend
      target: production # Utilise le stage de production
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://encadrin_api_usr:${API_DB_PASSWORD}@postgres:5432/encadrinyv01?schema=public
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:15-alpine
    restart: always
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=postgres
      - POSTGRES_DB=encadrinyv01
      - LANG=en_US.UTF-8
      - LC_ALL=en_US.UTF-8
    volumes:
      - pgdata-prod:/var/lib/postgresql/data
      - ./postgres/init:/docker-entrypoint-initdb.d:Z
    healthcheck:
      test:
        - "CMD-SHELL"
        - "PGPASSWORD==${API_DB_PASSWORD} pg_isready -U encadrin_api_usr -d encadrinyv01"
      interval: 10s
      timeout: 5s
      retries: 10

volumes:
  pgdata-prod:
